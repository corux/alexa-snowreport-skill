#!/usr/bin/env babel-node

import fs from 'fs';
import path from 'path';
import nomnom from 'nomnom';
import process from 'process';
import Bergfex from '../src/bergfex';

const exists = (filename) => fs.existsSync(filename)
  ? undefined
  : `${filename} does not exist`;

let { file } = nomnom
  .script('update-schema')
  .option('file', { required: true, callback: exists })
  .parse();

const schema = JSON.parse(fs.readFileSync(file));
const bergfex = new Bergfex();

const countries = bergfex.getCountries().map(country => country.code);
bergfex.getSkiRegions.apply(bergfex, countries).then(result => {
  const all = result.reduce((a, b) => a.concat(b), []);
  const skiRegions = {
    name: 'SKI_REGIONS'
  };
  skiRegions.values = all.map(region => ({
    id: region.code,
    name: {
      value: region.name,
      synonyms: region.altNames || []
    }
  }));

  schema.languageModel.types = [skiRegions];
  writeFile(schema);
});

function writeFile(schema) {
  const schemaFile = path.join(process.cwd(), file);
  fs.writeFile(schemaFile, JSON.stringify(schema, null, 2), 'utf8', (err) => {
    if (err) {
      process.exit(1);
    }
  });
}